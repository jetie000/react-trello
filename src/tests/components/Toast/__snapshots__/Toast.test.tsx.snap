// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Toast should render a toast container with a notification icon and a close button 1`] = `
Object {
  "asFragment": [Function],
  "baseElement": <body>
    <div>
      <div
        class="toast-container position-fixed bottom-0 end-0 p-3"
      >
        <div
          aria-atomic="true"
          aria-live="assertive"
          class="toast"
          id="myToast"
          role="alert"
        >
          <div
            class="toast-header"
          >
            <svg
              class="bi bi-bell-fill me-2"
              data-testid="notification-icon"
              fill="currentColor"
              height="16"
              viewBox="0 0 16 16"
              width="16"
              xmlns="http://www.w3.org/2000/svg"
            >
              <path
                d="M8 16a2 2 0 0 0 2-2H6a2 2 0 0 0 2 2zm.995-14.901a1 1 0 1 0-1.99 0A5.002 5.002 0 0 0 3 6c0 1.098-.5 6-2 7h14c-1.5-1-2-5.902-2-7 0-2.42-1.72-4.44-4.005-4.901z"
              />
            </svg>
            <strong
              class="me-auto"
            >
              Уведомление
            </strong>
            <button
              aria-label="Close"
              class="btn-close"
              data-bs-dismiss="toast"
              type="button"
            />
          </div>
          <div
            class="toast-body"
          >
            It's toast
          </div>
        </div>
      </div>
    </div>
  </body>,
  "container": <div>
    <div
      class="toast-container position-fixed bottom-0 end-0 p-3"
    >
      <div
        aria-atomic="true"
        aria-live="assertive"
        class="toast"
        id="myToast"
        role="alert"
      >
        <div
          class="toast-header"
        >
          <svg
            class="bi bi-bell-fill me-2"
            data-testid="notification-icon"
            fill="currentColor"
            height="16"
            viewBox="0 0 16 16"
            width="16"
            xmlns="http://www.w3.org/2000/svg"
          >
            <path
              d="M8 16a2 2 0 0 0 2-2H6a2 2 0 0 0 2 2zm.995-14.901a1 1 0 1 0-1.99 0A5.002 5.002 0 0 0 3 6c0 1.098-.5 6-2 7h14c-1.5-1-2-5.902-2-7 0-2.42-1.72-4.44-4.005-4.901z"
            />
          </svg>
          <strong
            class="me-auto"
          >
            Уведомление
          </strong>
          <button
            aria-label="Close"
            class="btn-close"
            data-bs-dismiss="toast"
            type="button"
          />
        </div>
        <div
          class="toast-body"
        >
          It's toast
        </div>
      </div>
    </div>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;
